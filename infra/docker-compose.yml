version: '3.8'

networks:
  main-network:
    name: main-network

services:
  postgres:
    image: postgres:14
    container_name: local_postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - main-network
    command: ["postgres", "-c", "listen_addresses=*"]


  localstack:
    image: localstack/localstack
    container_name: localstack
    environment:
      SERVICES: sqs,secretsmanager,s3,lambda,iam,events,cloudwatch,logs
      EDGE_PORT: 4566
      AWS_DEFAULT_REGION: ${AWS_REGION}
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    env_file:
      - ../.env
    ports:
      - "4566:4566"
    volumes:
      - localstack_data:/var/lib/localstack

      - ./localstack-setup.sh:/etc/localstack/init/ready.d/script.sh

      - ../scheduler_lambda/scheduler_lambda.zip:/tmp/scheduler_lambda.zip

      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - main-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    container_name: api_service
    build:
      context: ..
      dockerfile: ./api/Dockerfile
    env_file:
      - ../.env
    networks:
      - main-network
    depends_on:
      - postgres
      - localstack
    ports:
      - "8000:8000"

  worker:
    container_name: worker_service
    build:
      context: ..
      dockerfile: ./worker/Dockerfile
    env_file:
      - ../.env
    networks:
      - main-network
    depends_on:
      postgres:
        condition: service_started
      localstack:
        condition: service_healthy

  scheduler:
    container_name: scheduler
    build:
      context: ..
      dockerfile: ./scheduler_lambda/Dockerfile
    env_file:
      - ../.env
    networks:
      - main-network
    depends_on:
      localstack:
        condition: service_healthy

volumes:
  postgres_data:
  localstack_data:
